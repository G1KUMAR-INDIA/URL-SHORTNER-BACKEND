const express = require('express');
const router = express.Router();
const { nanoid } = require('nanoid');
const QRCode = require('qrcode');
const Url = require('../models/Url');

router.post('/shorten', async (req, res) => {
  const { originalUrl } = req.body;
  const base = process.env.BASE_URL;
  const urlCode = nanoid(8);
  const shortUrl = `${base}/${urlCode}`;

  try {
    // Check if the URL already exists
    let url = await Url.findOne({ originalUrl });
    if (url) return res.json(url);

    // Generate QR code
    const qrCode = await QRCode.toDataURL(shortUrl);

    // Create new URL document
    url = new Url({ originalUrl, shortUrl, urlCode, qrCode });
    await url.save();

    res.json(url);
  } catch (err) {
    console.error(err.message);
    res.status(500).json({ error: 'Server error' });
  }
});

// Redirect to original URL
router.get('/:code', async (req, res) => {
  try {
    const url = await Url.findOne({ urlCode: req.params.code });
    if (url) return res.redirect(url.originalUrl);
    res.status(404).json({ error: 'URL not found' });
  } catch (err) {
    console.error(err.message);
    res.status(500).json({ error: 'Server error' });
  }
});
